# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
 branches:
   include:
     - main

pool:
  vmImage: ubuntu-latest

stages:
- stage: CI
  jobs:
  - job:
    displayName: üë©‚Äçüî¨ Test
    steps: 
    - task: UsePythonVersion@0
      displayName: Set Python Version to PATH
      inputs:
        versionSpec: '3.10.x'
        addToPath: true
        architecture: 'x64'
    - script: python -m pip install --upgrade pip
      displayName: Install Tools
    - script: pip install -r utensils/requirements.txt
      displayName: 'Install pip requirements'
    - script: |
        pip install pytest pytest-azurepipelines
        pip install pytest-cov
        pytest --doctest-modules --junitxml=junit/test-results.xml --cov=. --cov-report=xml
      displayName: 'pytest'
    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        testResultsFiles: '**/test-*.xml'
        testRunTitle: 'Publish test results for $(Build.Repository.Name)'
    - task: PublishCodeCoverageResults@1
      inputs:
        codeCoverageTool: Cobertura
        summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
  - job:
    displayName: üê≥ Docker Build & Push
    steps:
      - script: ls
      - task: Docker@2
        inputs:
          containerRegistry: 'mlphilli-docker'
          repository: 'mlphilli/literate-spork'
          buildContext: '**/utensils'
          command: 'buildAndPush'
          Dockerfile: '../docker/Dockerfile'
          tags: '$(Build.SourceVersion)'